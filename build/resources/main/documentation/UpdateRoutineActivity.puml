@startuml

actor "Client" as client
participant "API Gateway/Lambda" as apiGateway
participant "UpdateRoutineActivity" as updateRoutineActivity
participant "RoutineDao" as routineDao
database "DynamoDB" as dynamoDB

title Update Routine

client -> apiGateway : HTTP Request
activate apiGateway

apiGateway -> updateRoutineActivity : UpdateRoutineRequest
activate updateRoutineActivity

updateRoutineActivity -> updateRoutineActivity : validate routine name from request

alt if name contains invalid characters
updateRoutineActivity --> apiGateway : throw InvalidAttributeValueException
apiGateway --> client: return 400 response

else else continue
end

updateRoutineActivity -> routineDao : getRoutine(id)
activate routineDao

routineDao -> dynamoDB : lookup by routine id
activate dynamoDB

alt if routine does not exist
dynamoDB --> routineDao : return with no item data
routineDao --> updateRoutineActivity: throw RoutineNotFoundException
updateRoutineActivity --> apiGateway: propagate RoutineNotFoundException
apiGateway --> client: return 400 response
else else continue
end

dynamoDB --> routineDao: return routine data
deactivate dynamoDB

routineDao --> updateRoutineActivity : return Routine object
deactivate routineDao

updateRoutineActivity -> updateRoutineActivity : validate routine customer ID matches request
alt if the request's customer ID and the routine's customer ID are different
updateRoutineActivity --> apiGateway: throw InvalidAttributeChangeException
apiGateway --> client: return 400 response

else else continue
end


updateRoutineActivity -> updateRoutineActivity: update Routine

updateRoutineActivity -> routineDao : saveRoutine(Routine)
activate routineDao

routineDao -> dynamoDB : store Routine
activate dynamoDB

dynamoDB --> routineDao : return 200 response
deactivate dynamoDB

routineDao --> updateRoutineActivity : return updated Routine object
deactivate routineDao

updateRoutineActivity -> updateRoutineActivity: create RoutineModel

updateRoutineActivity -> updateRoutineActivity: set RoutineModel with saved Routine data

updateRoutineActivity -> updateRoutineActivity: Create UpdateRoutineResponse
updateRoutineActivity -> updateRoutineActivity: Set RoutineModel field in UpdateRoutineResponse

updateRoutineActivity --> apiGateway : return UpdateRoutineResponse
deactivate updateRoutineActivity

apiGateway --> client : return 200 response with UpdateRoutineResponse data
deactivate apiGateway

@enduml
