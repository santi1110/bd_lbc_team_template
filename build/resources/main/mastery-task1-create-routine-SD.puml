@startuml
title Create Routine

actor Client
participant "API Gateway" as APIGateway
participant Lambda
participant CreateRoutineActivity
participant RoutineDao
participant GymRoutineServiceUtils
participant ModelConverter
database DynamoDB

Client -> APIGateway : POST /routines
activate Client
APIGateway -> Lambda
activate Lambda
activate CreateRoutineActivity
activate RoutineDao
Lambda -> CreateRoutineActivity :  handleRequest(CreateRoutineRequest, Context)
CreateRoutineActivity -> GymRoutineServiceUtils : isValidString(name)
CreateRoutineActivity -> GymRoutineServiceUtils : isValidString(customerId)

alt if name or customerId invalid
    CreateRoutineActivity <-- GymRoutineServiceUtils : false
    Lambda <-- CreateRoutineActivity : throw InvalidAttributeValueException
    APIGateway <-- Lambda
    Client <-- APIGateway : 4xx Response
else otherwise, continue
end

CreateRoutineActivity -> GymRoutineServiceUtils : generateRoutineId()
CreateRoutineActivity <-- GymRoutineServiceUtils : new routine ID

CreateRoutineActivity -> CreateRoutineActivity : populate Routine object

CreateRoutineActivity -> RoutineDao : saveRoutine(Routine)
RoutineDao -> DynamoDB : save routine
RoutineDao <-- DynamoDB
CreateRoutineActivity <-- RoutineDao : Routine

CreateRoutineActivity -> ModelConverter : toRoutineModel(Routine)
activate ModelConverter
CreateRoutineActivity <-- ModelConverter : RoutineModel
deactivate ModelConverter

Lambda <-- CreateRoutineActivity : CreateRoutineResponse
deactivate RoutineDao
deactivate CreateRoutineActivity
APIGateway <-- Lambda
deactivate Lambda
Client <-- APIGateway : 200 Response
deactivate Client

@enduml

